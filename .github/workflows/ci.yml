name: "CI"

defaults:
  run:
    working-directory: terraform

env:
  ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
  ARM_USE_AZUREAD: true
  TF_STATE_BLOB_CONTAINER_NAME: ${{ secrets.TF_STATE_BLOB_CONTAINER_NAME }}
  TF_STATE_BLOB_KEY: ${{ secrets.TF_STATE_BLOB_KEY }}
  TF_STATE_BLOB_RESOURCE_GROUP_NAME: ${{ secrets.TF_STATE_BLOB_RESOURCE_GROUP_NAME }}
  TF_STATE_BLOB_STORAGE_ACCOUNT_NAME: ${{ secrets.TF_STATE_BLOB_STORAGE_ACCOUNT_NAME }}

on:
  push:
    branches: [ main ]

jobs:
  terraform:
    env:
      TF_VAR_public_key: ${{ secrets.TF_VAR_PUBLIC_KEY }}

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Terraform Format
        run: terraform fmt -check

      - name: Terraform Initialize
        run: |
          terraform init \
            -backend-config="container_name=$TF_STATE_BLOB_CONTAINER_NAME" \
            -backend-config="key=$TF_STATE_BLOB_KEY" \
            -backend-config="resource_group_name=$TF_STATE_BLOB_RESOURCE_GROUP_NAME" \
            -backend-config="storage_account_name=$TF_STATE_BLOB_STORAGE_ACCOUNT_NAME"

      - name: Terraform Plan
        run: terraform plan -out plan

      - name: Terraform Apply
        run: terraform apply -auto-approve "plan"

  install-packages:
    needs: terraform
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Terraform Initialize
        run: |
          terraform init \
            -backend-config="container_name=$TF_STATE_BLOB_CONTAINER_NAME" \
            -backend-config="key=$TF_STATE_BLOB_KEY" \
            -backend-config="resource_group_name=$TF_STATE_BLOB_RESOURCE_GROUP_NAME" \
            -backend-config="storage_account_name=$TF_STATE_BLOB_STORAGE_ACCOUNT_NAME"

      - name: Azure Login
        run: |
          az login --service-principal \
                   --username="$ARM_CLIENT_ID" \
                   --password="$ARM_CLIENT_SECRET" \
                   --tenant="$ARM_TENANT_ID"

      - name: Install Terraform on VM
        run: |
          LINUX_VIRTUAL_MACHINE_ID=$(terraform output -raw linux_virtual_machine_id)

          az vm run-command invoke --command-id="RunShellScript" \
                                   --ids="$LINUX_VIRTUAL_MACHINE_ID" \
                                   --scripts=@scripts/install-terraform.sh

      - name: Install Azure DevOps Agent on VM
        run: |
          LINUX_VIRTUAL_MACHINE_NAME=$(terraform output -raw linux_virtual_machine_name)
          RESOURCE_GROUP_NAME=$(terraform output -raw resource_group_name)

          az vm run-command create --run-command-name="InstallAzureDevOpsAgent" \
                                   --vm-name="$LINUX_VIRTUAL_MACHINE_NAME" \
                                   --resource-group="$RESOURCE_GROUP_NAME" \
                                   --parameters "$AGENT_DIRECTORY" "$TOKEN" "$URL" \
                                   --run-as-user="adyavanapalli" \
                                   --scripts=@scripts/install-azuredevopsagent.sh
        env:
          AGENT_DIRECTORY: vm-azuredevopsagent-eastus
          TOKEN: ${{ secrets.TOKEN }}
          URL: https://dev.azure.com/starsandmanifolds
